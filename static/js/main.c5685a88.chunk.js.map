{"version":3,"sources":["Dropdown.js","Printsites.jsx","App.js","index.js"],"names":["options","Dropdown","value","setValue","React","inputValue","setInputValue","Autocomplete","onChange","event","newValue","onInputChange","newInputValue","id","sx","width","renderInput","params","TextField","label","Printsites","props","data","links","map","d","i","App","landingPageData","setLandingPageData","useState","useEffect","JsonData","className","rootElement","document","getElementById","ReactDOM","render"],"mappings":"6UAIA,MAAMA,EAAU,CAAC,WAAY,YAEd,SAASC,IACtB,MAAOC,EAAOC,GAAYC,WAAeJ,EAAQ,KAC1CK,EAAYC,GAAiBF,WAAe,IAEnD,OACE,gCACE,+CAA0B,OAAVF,EAAA,WAAqBA,EAArB,KAAgC,UAChD,qDAAsBG,EAAtB,OACA,uBACA,cAACE,EAAA,EAAD,CACEL,MAAOA,EACPM,SAAU,CAACC,EAAOC,KAChBP,EAASO,IAEXL,WAAYA,EACZM,cAAe,CAACF,EAAOG,KACrBN,EAAcM,IAEhBC,GAAG,2BACHb,QAASA,EACTc,GAAI,CAAEC,MAAO,KACbC,YAAcC,GAAW,cAACC,EAAA,EAAD,IAAeD,EAAQE,MAAM,sB,YC3BvD,MAAMC,EAAcC,GAEvB,qBAAKR,GAAG,QAAR,SACE,6BACGQ,EAAMC,KACHD,EAAMC,KAAKC,MAAMC,KAAI,CAACC,EAAGC,IAAM,6BAAuBD,GAAvB,UAAYA,EAAZ,YAAiBC,MAChD,c,MCCG,SAASC,IACtB,MAAOC,EAAiBC,GAAsBC,mBAAS,IAIvD,OAHAC,qBAAU,KACRF,EAAmBG,KAClB,IAED,sBAAKC,UAAU,MAAf,UACE,mDACA,yEACA,cAAChC,EAAD,IACA,cAACmB,EAAD,CAAYE,KAAMM,EAAgBR,gBCZxC,MAAMc,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACX,EAAD,MAEFO,K","file":"static/js/main.c5685a88.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst options = [\"Option 1\", \"Option 2\"];\r\n\r\nexport default function Dropdown() {\r\n  const [value, setValue] = React.useState(options[0]);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <div>{`value: ${value !== null ? `'${value}'` : \"null\"}`}</div>\r\n      <div>{`inputValue: '${inputValue}'`}</div>\r\n      <br />\r\n      <Autocomplete\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        inputValue={inputValue}\r\n        onInputChange={(event, newInputValue) => {\r\n          setInputValue(newInputValue);\r\n        }}\r\n        id=\"controllable-states-demo\"\r\n        options={options}\r\n        sx={{ width: 300 }}\r\n        renderInput={(params) => <TextField {...params} label=\"Controllable\" />}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","export const Printsites = (props) => {\r\n  return (\r\n    <div id=\"sites\">\r\n      <ul>\r\n        {props.data\r\n          ? props.data.links.map((d, i) => <li key={`${d}-${i}`}>{d}</li>)\r\n          : \"loading\"}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import Dropdown from \"./Dropdown\";\nimport { useState, useEffect } from \"react\";\nimport JsonData from \"./data/data.json\";\n\nimport { Printsites } from \"./Printsites\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n  return (\n    <div className=\"App\">\n      <h1>Hello CodeSandbox</h1>\n      <h2>Start editing to see some magic happen!</h2>\n      <Dropdown />\n      <Printsites data={landingPageData.Printsites} />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}